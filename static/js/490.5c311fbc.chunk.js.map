{"version":3,"file":"static/js/490.5c311fbc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Forms/Forms.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ShowModalButton/ShowModalButton.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter.nameUser;\n\nexport const getShowModal = state => state.showModal.showModal;\n","import styled from '@emotion/styled';\n\nexport const WrapperContacts = styled.div``;\n\nexport const ItemContact = styled.li`\n  display: flex;\n  font-weight: 500;\n  font-size: 20px;\n  justify-content: space-between;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  padding-left: 10px;\n  padding-right: 10px;\n  &:nth-of-type(odd) {\n    background-color: #f6f8fa;\n  }\n`;\nexport const DeleteButton = styled.button`\n  display: flex;\n  padding: 5px 10px;\n  border-radius: 10px;\n  border: none;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 15px;\n  color: #fff;\n  background: #e30613;\n  &:hover,\n  &:focus {\n    background: #bd020d;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilterValue } from 'redux/contacts/selectors';\nimport { WrapperContacts, ItemContact, DeleteButton } from './Contacts.styled';\n\nconst getVisibleContacts = (contacts, value) => {\n  if (value === '') {\n    return contacts;\n  }\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(value.toLowerCase())\n  );\n};\n\nexport const Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, value);\n\n  return (\n    <WrapperContacts>\n      <ul>\n        {visibleContacts !== undefined &&\n          visibleContacts.map(contact => (\n            <ItemContact key={contact.id}>\n              {contact.name}: {contact.number}\n              <DeleteButton onClick={() => handleDelete(contact.id)}>\n                Delete\n              </DeleteButton>\n            </ItemContact>\n          ))}\n      </ul>\n    </WrapperContacts>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport {\n  FormContainer,\n  TitleInput,\n  Input,\n  Error,\n  NameInput,\n  Button,\n} from './Forms.styled';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().required('*Required'),\n  number: Yup.string().required('*Required'),\n});\n\nexport const Forms = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = newContact => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit({ ...values });\n          actions.resetForm();\n        }}\n      >\n        <Form autoComplete=\"off\">\n          <TitleInput htmlFor=\"name\">\n            <NameInput>Name</NameInput>\n            <Input type=\"text\" name=\"name\" />\n            <Error name=\"name\" component=\"div\" />\n          </TitleInput>\n          <TitleInput htmlFor=\"number\">\n            <NameInput>Number</NameInput>\n            <Input\n              type=\"text\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              name=\"number\"\n            />\n            <Error name=\"number\" component=\"div\" />\n          </TitleInput>\n\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nForm.propTypes = {\n  onSave: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerFilterInput = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport const LabelInput = styled.label`\n  display: block;\n`;\n\nexport const TitleFilter = styled.span`\n  display: block;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 200px;\n  height: 25px;\n  background-color: transparent;\n  border-radius: 15px;\n  border: 2px solid #f09292;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport {\n  ContainerFilterInput,\n  TitleFilter,\n  FilterInput,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.target.value;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <ContainerFilterInput>\n      <ContainerFilterInput htmlFor=\"name\">\n        <TitleFilter>Find contacts by name</TitleFilter>\n        <FilterInput\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n        />\n      </ContainerFilterInput>\n    </ContainerFilterInput>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setShowModal } from 'redux/showModalSlice';\nimport { getShowModal } from 'redux/contacts/selectors';\nimport { BackDrop, ModalWindow } from './Modal.styled';\n\nexport default function Modal({ children }) {\n  const dispatch = useDispatch();\n  const showModalStatus = useSelector(getShowModal);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        dispatch(setShowModal(!showModalStatus));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [showModalStatus, dispatch]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      dispatch(setShowModal(!showModalStatus));\n    }\n  };\n\n  return (\n    <BackDrop onClick={handleBackdropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </BackDrop>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getShowModal } from 'redux/contacts/selectors';\nimport { setShowModal } from 'redux/showModalSlice';\nimport { Button } from 'components/Forms/Forms.styled';\nexport const ShowModalButton = () => {\n  const dispatch = useDispatch();\n  const showModalStatus = useSelector(getShowModal);\n  console.log(showModalStatus);\n  const handleShowModal = () => {\n    dispatch(setShowModal(!showModalStatus.showModal));\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleShowModal}>\n        New Contact\n      </Button>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getShowModal } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Forms } from 'components/Forms/Forms';\nimport { Filter } from 'components/Filter/Filter';\nimport Modal from 'components/Modal/Modal';\nimport { ShowModalButton } from 'components/ShowModalButton/ShowModalButton';\n\nexport default function Contact() {\n  const dispatch = useDispatch();\n  const showModalStatus = useSelector(getShowModal);\n  console.log(showModalStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, showModalStatus]);\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      {showModalStatus ? (\n        <Modal>\n          <Forms />\n        </Modal>\n      ) : (\n        <ShowModalButton />\n      )}\n\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","nameUser","getShowModal","showModal","WrapperContacts","styled","ItemContact","DeleteButton","Contacts","useSelector","value","dispatch","useDispatch","visibleContacts","contact","name","toLowerCase","includes","getVisibleContacts","undefined","map","number","onClick","id","deleteContact","SignupSchema","Yup","shape","required","Forms","initialValues","validationSchema","onSubmit","values","actions","newContact","find","alert","addContact","resetForm","autoComplete","htmlFor","type","component","pattern","Form","onSave","PropTypes","ContainerFilterInput","TitleFilter","FilterInput","Filter","onChange","e","target","filterContact","BackDrop","ModalWindow","Modal","children","showModalStatus","useEffect","handleKeyDown","code","setShowModal","window","addEventListener","removeEventListener","currentTarget","ShowModalButton","console","log","Contact","fetchContacts","Helmet"],"sourceRoot":""}